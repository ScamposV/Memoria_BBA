include gro
set ( "dt", 0.1 );
set ( "population_max", 5000 );

t := 0;
t1 := 0;
n := 0;

//Cellsignals settings
set ("signals", 1.0); //0.0: off, 1.0: on
set ("signals_draw", 1.0);
grid("continuous", "gro_original", 10, 10, 8);

echo := s_signal([kdiff := 1.0, kdeg := 0.3]);

//Circuitos de echo

genes([	name := "Prot1",
		proteins := {"prot1", "LuxI", "Rel1", "iam1"},
		promoter := [function := "TRUE"],
		prot_act_times := [times := {30.0, 30.0, 20.0, 0.0}, variabilities := {8.0, 8.0, 6.0, 0.0}],
		prot_deg_times := [times := {10.0, 10.0, 6.0, 0.0}, variabilities := {2.0, 2.0, 1.0, 0.0}]
	]);

genes([	name := "Prot2",
		proteins := {"prot2", "LuxI", "Rel2", "iam2"},
		promoter := [function := "TRUE"],
		prot_act_times := [times := {30.0, 30.0, 20.0, 0.0}, variabilities := {8.0, 8.0, 6.0, 0.0}],
		prot_deg_times := [times := {10.0, 10.0, 6.0, 0.0}, variabilities := {2.0, 2.0, 1.0, 0.0}]
	]);

genes([	name := "Prot3",
		proteins := {"prot3", "LuxI", "Rel3", "iam3"},
		promoter := [function := "TRUE"],
		prot_act_times := [times := {30.0, 30.0, 20.0, 0.0}, variabilities := {8.0, 8.0, 6.0, 0.0}],
		prot_deg_times := [times := {10.0, 10.0, 6.0, 0.0}, variabilities := {2.0, 2.0, 1.0, 0.0}]
	]);

genes([	name := "Prot4",
		proteins := {"prot4", "LuxI", "Rel4", "iam4"},
		promoter := [function := "TRUE"],
		prot_act_times := [times := {30.0, 30.0, 20.0, 0.0}, variabilities := {8.0, 8.0, 6.0, 0.0}],
		prot_deg_times := [times := {10.0, 10.0, 6.0, 0.0}, variabilities := {2.0, 2.0, 1.0, 0.0}]
	]);
//lux para qs, rel conjugacion y iam identificacion

//Circuitos de regulacion de crecimiento

genes([	name := "Lvl1",
		proteins := {"g1"},
		promoter := [function := "YES", transcription_factors := {"lvl1"}],
		prot_act_times := [times := {0.1}, variabilities := {0.0}],
		prot_deg_times := [times := {0.1}, variabilities := {0.0}]
	]);

genes([	name := "Lvl2",
		proteins := {"g2"},
		promoter := [function := "YES", transcription_factors := {"lvl2"}],
		prot_act_times := [times := {0.1}, variabilities := {0.0}],
		prot_deg_times := [times := {0.1}, variabilities := {0.0}]
	]);

genes([	name := "Lvl3",
		proteins := {"g3"},
		promoter := [function := "YES", transcription_factors := {"lvl3"}],
		prot_act_times := [times := {0.1}, variabilities := {0.0}],
		prot_deg_times := [times := {0.1}, variabilities := {0.0}]
	]);

genes([	name := "Lvl4",
		proteins := {"g4"},
		promoter := [function := "YES", transcription_factors := {"lvl4"}],
		prot_act_times := [times := {0.1}, variabilities := {0.0}],
		prot_deg_times := [times := {0.1}, variabilities := {0.0}]
	]);

//Circuitos de conteo

genes([	name := "count1p1",
		proteins := {"just1"},
		promoter := [function := "AND", transcription_factors := {"iam1","-iam2","-iam3","-iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count1p2",
		proteins := {"just1"},
		promoter := [function := "AND", transcription_factors := {"-iam1","iam2","-iam3","-iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count1p3",
		proteins := {"just1"},
		promoter := [function := "AND", transcription_factors := {"-iam1","-iam2","iam3","-iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count1p4",
		proteins := {"just1"},
		promoter := [function := "AND", transcription_factors := {"-iam1","-iam2","-iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count2p1p2",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"iam1","iam2","-iam3","-iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count2p2p3",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"-iam1","iam2","iam3","-iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count2p3p4",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"-iam1","-iam2","iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count2p1p3",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"iam1","-iam2","iam3","-iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count2p2p4",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"-iam1","iam2","-iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count2p1p4",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"iam1","-iam2","-iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count3p1p2p3",
		proteins := {"just3"},
		promoter := [function := "AND", transcription_factors := {"iam1","iam2","iam3","-iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count3p2p3p4",
		proteins := {"just3"},
		promoter := [function := "AND", transcription_factors := {"-iam1","iam2","iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count3p1p3p4",
		proteins := {"just3"},
		promoter := [function := "AND", transcription_factors := {"iam1","-iam2","iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count3p1p2p4",
		proteins := {"just3"},
		promoter := [function := "AND", transcription_factors := {"iam1","iam2","-iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);
genes([	name := "count4",
		proteins := {"just4"},
		promoter := [function := "AND", transcription_factors := {"iam1","iam2","iam3","iam4"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);

plasmids_genes([ p1 := {"Prot1","Lvl1","Lvl2","Lvl3","Lvl4","count1p1", "count1p2", "count1p3", "count1p4", "count2p1p2", "count2p2p3", "count2p3p4", "count2p1p3", "count2p2p4", "count2p1p4", "count3p1p2p3", "count3p2p3p4","count3p1p3p4", "count3p1p2p4", "count4"},
				 p2 := {"Prot2","Lvl1","Lvl2","Lvl3","Lvl4","count1p1", "count1p2", "count1p3", "count1p4", "count2p1p2", "count2p2p3", "count2p3p4", "count2p1p3", "count2p2p4", "count2p1p4", "count3p1p2p3", "count3p2p3p4","count3p1p3p4", "count3p1p2p4", "count4"},
				 p3 := {"Prot3","Lvl1","Lvl2","Lvl3","Lvl4","count1p1", "count1p2", "count1p3", "count1p4", "count2p1p2", "count2p2p3", "count2p3p4", "count2p1p3", "count2p2p4", "count2p1p4", "count3p1p2p3", "count3p2p3p4","count3p1p3p4", "count3p1p2p4", "count4"},
				 p4 := {"Prot4","Lvl1","Lvl2","Lvl3","Lvl4","count1p1", "count1p2", "count1p3", "count1p4", "count2p1p2", "count2p2p3", "count2p3p4", "count2p1p3", "count2p2p4", "count2p1p4", "count3p1p2p3", "count3p2p3p4","count3p1p3p4", "count3p1p2p4", "count4"}
				 ]);

//Actions

/* AQUI PARAMETRO 1!!! Tasa de conjugacion es la tasa de evolucion de la solucion.
Dado que todos los bits valen lo mismo, lo ideal es alterar esta tasa por igual
para los tres plasmidos al mismo tiempo.*/
action({"Rel1"}, "conjugate", {"p1","0.2"});
action({"Rel2"}, "conjugate", {"p2","0.2"});
action({"Rel3"}, "conjugate", {"p3","0.2"});
action({"Rel4"}, "conjugate", {"p4","0.2"});

//VERDE, ROJO, AMARILLO, CIAN
action({"just4"},"paint",{"255","0","0","0"});
action({"just3"},"paint",{"0","0","255","0"});
action({"just2"},"paint",{"0","0","0","255"});
action({"just1"},"paint",{"0","255","0","0"});

action({"LuxI"},"s_emit_signal",{tostring(echo),"0.1","exact"});

/* OJO!!! AQUI PARAMETRO 2!!! Esta es la escucha de la ecolocalizacion. 
A menor valor, mayor sensibilidad (y va disminuyendo, de modo de ser mas estricto en la
solucion a localizar). Esto controla el crecimiento: si hay poca senal, mala zona de 
soluciones. Si hay mas senal, buena zona de soluciones. Jugar con los umbrales (0.0005, 0.03 y 1.0).*/
action({}, "s_get_QS", {tostring(echo), ">", "0.0005", "lvl1"});
action({}, "s_get_QS", {tostring(echo), ">", "0.003", "lvl2"});
action({}, "s_get_QS", {tostring(echo), ">", "0.01", "lvl3"});
action({}, "s_get_QS", {tostring(echo), ">", "1.0", "lvl4"});

action({},"set_growth_rate",{"0.00001"});

//just1 = 1 plasmido ; just2 = 2 plasmidos
action({"g1","just1"}, "set_growth_rate",{"0.001"}); // 12 horas se demora en dividir
action({"g2","just2"}, "set_growth_rate",{"0.002"}); // 6 horas
action({"g3","just3"}, "set_growth_rate",{"0.012"}); // 1 hora
action({"g4","just4"}, "set_growth_rate",{"0.034"}); // 20 minutos

fp := fopen ("C:\Users\Tatan\mail.udp.cl\Memoria_02_2022 - Documentos\datos-scp\datosscp4.csv", "w");
//fp := fopen ("C:\Users\vm\Documents\1.csv", "w");

//cambiar ruta para video
//route2 := "C:\Users\vm\Pictures\";
route2 := "C:\Users\Tatan\mail.udp.cl\Memoria_02_2022 - Documentos\FIJI_AVI_SCP_4\";

//Programs
program p() :=
{
	skip();
};

program main() := {
	
    t = 0:
    {
        // Encabezado del archivo csv
        fprint(fp, "Time, GFP, CFP, YFP, RFP, Total\n");
    }

    t1 > 50 : 
	{ 
        //Con esto se graba la imagen cada 5 minutos simulados
    	snapshot ( route2 <> "pic" <> tostring(n) <> ".tif" ),
    	n := n + 1,
    	t1 := 0
  	}

    //ESTO ES PARA DETENER LA SIMULACION POR TIEMPO. Por los tiempos que se manejan, no es recomendable.
    /*t > 250:
    {
        stop();
    }*/

	true: 
	{ 
        /*Aqui se mandan los datos al csv indicado arriba. Ojo con que en cada run se pisa el archivo anterior si 
        es que no se cambia el nombre de el.*/
        dump_multiple(fp,{"just4","-just3","just2","-just1"},{"-just3","-just4","-just1","just2"},{"just3","-just4","-just2","-just1"},{"just1","-just4","-just2","-just3"},{}); //MULTIPLE MODE
		t := t + dt;
        t1 := t1 + dt;
	}	
	
	c_ecolis(100, 0, 0, 400, {"p1"}, program p());
    c_ecolis(100, 0, 0, 400, {"p2"}, program p());
    c_ecolis(100, 0, 0, 400, {"p3"}, program p());
	c_ecolis(100, 0, 0, 400, {"p4"}, program p());
	c_ecolis(700, 0, 0, 400, {}, program p());
};