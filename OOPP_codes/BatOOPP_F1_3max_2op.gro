/*
Fase 1
Optimal Operator Placement Problem
1 maquina - 1 operador
Maximo 3 operadores en la maquina
La maquina funciona bien con 2 operadores
Penaliza cuando es 3, y cuando es 0 o 1, se induce para que llegue a 2
*/

include gro
set ( "dt", 0.1 );
set ( "population_max", 5000 );

t := 0;
t1 := 0;
n := 0;

//Cellsignals settings
set ("signals", 1.0); //0.0: off, 1.0: on
set ("signals_draw", 1.0);
grid("continuous", "gro_original", 10, 10, 8);

echo := s_signal([kdiff := 1.0, kdeg := 0.3]);

//Circuitos de echo

genes([	name := "Prot1",
		proteins := {"prot1", "LuxI", "Rel1", "iam1"},
		promoter := [function := "TRUE"],
		prot_act_times := [times := {30.0, 30.0, 20.0, 0.0}, variabilities := {8.0, 8.0, 6.0, 0.0}],
		prot_deg_times := [times := {10.0, 10.0, 6.0, 0.0}, variabilities := {2.0, 2.0, 1.0, 0.0}]
	]);

genes([	name := "Prot2",
		proteins := {"prot2", "LuxI", "Rel2", "iam2"},
		promoter := [function := "TRUE"],
		prot_act_times := [times := {30.0, 30.0, 20.0, 0.0}, variabilities := {8.0, 8.0, 6.0, 0.0}],
		prot_deg_times := [times := {10.0, 10.0, 6.0, 0.0}, variabilities := {2.0, 2.0, 1.0, 0.0}]
	]);

genes([	name := "Prot3",
		proteins := {"prot3", "LuxI", "Rel3", "iam3"},
		promoter := [function := "TRUE"],
		prot_act_times := [times := {30.0, 30.0, 20.0, 0.0}, variabilities := {8.0, 8.0, 6.0, 0.0}],
		prot_deg_times := [times := {10.0, 10.0, 6.0, 0.0}, variabilities := {2.0, 2.0, 1.0, 0.0}]
	]);
//lux para qs, rel conjugacion y iam identificacion

//Circuitos de regulacion de crecimiento

genes([	name := "Lvl1",
		proteins := {"g1"},
		promoter := [function := "YES", transcription_factors := {"lvl1"}],
		prot_act_times := [times := {0.1}, variabilities := {0.0}],
		prot_deg_times := [times := {0.1}, variabilities := {0.0}]
	]);

genes([	name := "Lvl2",
		proteins := {"g2"},
		promoter := [function := "YES", transcription_factors := {"lvl2"}],
		prot_act_times := [times := {0.1}, variabilities := {0.0}],
		prot_deg_times := [times := {0.1}, variabilities := {0.0}]
	]);

genes([	name := "Lvl3",
		proteins := {"g3"},
		promoter := [function := "YES", transcription_factors := {"lvl3"}],
		prot_act_times := [times := {0.1}, variabilities := {0.0}],
		prot_deg_times := [times := {0.1}, variabilities := {0.0}]
	]);

    //Circuitos de conteo

genes([	name := "count1p1",
		proteins := {"just1"},
		promoter := [function := "AND", transcription_factors := {"iam1","-iam2","-iam3"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);  

genes([	name := "count1p2",
		proteins := {"just1"},
		promoter := [function := "AND", transcription_factors := {"-iam1","iam2","-iam3"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);  

genes([	name := "count1p3",
		proteins := {"just1"},
		promoter := [function := "AND", transcription_factors := {"-iam1","-iam2","iam3"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);

genes([	name := "count2p1p2",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"iam1","iam2","-iam3"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);  

genes([	name := "count2p2p3",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"-iam1","iam2","iam3"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]);  

genes([	name := "count2p3p1",
		proteins := {"just2"},
		promoter := [function := "AND", transcription_factors := {"iam1","-iam2","iam3"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]); 

genes([	name := "count3",
		proteins := {"just3"},
		promoter := [function := "AND", transcription_factors := {"iam1","iam2","iam3"}],
		prot_act_times := [times := {0.0}, variabilities := {0.0}],
		prot_deg_times := [times := {0.0}, variabilities := {0.0}]
	]); 

plasmids_genes([ p1 := {"Prot1","Lvl1","Lvl2","Lvl3","count1p1","count1p2","count1p3","count2p1p2","count2p2p3","count2p3p1","count3"},
				 p2 := {"Prot2","Lvl1","Lvl2","Lvl3","count1p1","count1p2","count1p3","count2p1p2","count2p2p3","count2p3p1","count3"},
				 p3 := {"Prot3","Lvl1","Lvl2","Lvl3","count1p1","count1p2","count1p3","count2p1p2","count2p2p3","count2p3p1","count3"}]);

//Actions

action({"Rel1"}, "conjugate", {"p1","0.2"});
action({"Rel2"}, "conjugate", {"p2","0.2"});
action({"Rel3"}, "conjugate", {"p3","0.2"});

action({"just3"},"paint",{"0","255","0","0"});
action({"just2"},"paint",{"255","0","0","0"});
action({"just1"},"paint",{"0","0","255","0"});

action({"LuxI"},"s_emit_signal",{tostring(echo),"0.1","exact"});

//lv1-0.005; lv2-0.03; lvl3-1.0
action({}, "s_get_QS", {tostring(echo), ">", "0.0005", "lvl1"});
action({}, "s_get_QS", {tostring(echo), ">", "0.03", "lvl2"});
action({}, "s_get_QS", {tostring(echo), ">", "1.0", "lvl3"});


action({},"set_growth_rate",{"0.001"});
action({"g1","just3"}, "set_growth_rate",{"0.001"}); // 12 horas se demora en dividir
action({"g2","just1"}, "set_growth_rate",{"0.012"}); // 1 hora
action({"g3","just2"}, "set_growth_rate",{"0.034"}); // 20 minutos

fp := fopen ("C:\Users\Tatan\mail.udp.cl\Memoria_02_2022 - Documentos\datos-oopp\datosOPPP3.csv", "w");

//cambiar ruta para video
route2 := "C:\Users\Tatan\mail.udp.cl\Memoria_02_2022 - Documentos\Fase1_OOPP\FIJI_AVI_OOPP_3/";


//Programs
program p() :=
{
	skip();
};

program main() := {
	
    t = 0:
    {
        // Encabezado del archivo csv
        fprint(fp, "Time, GFP, RFP, YFP, Total\n");
    }

    t1 > 5 : 
	{ 
        //Con esto se graba la imagen cada 5 minutos simulados
    	snapshot ( route2 <> "pic" <> tostring(n) <> ".tif" ),
    	n := n + 1,
    	t1 := 0
  	}

    //ESTO ES PARA DETENER LA SIMULACION POR TIEMPO. Por los tiempos que se manejan, no es recomendable.
    /*t > 250:
    {
        stop();
    }*/

	true: 
	{ 
        /*Aqui se mandan los datos al csv indicado arriba. Ojo con que en cada run se pisa el archivo anterior si 
        es que no se cambia el nombre de el.*/
        dump_multiple(fp,{"-just3","-just1","just2"},{"-just1","-just2","just3"},{"-just3","-just2","just1"},{}); //MULTIPLE MODE
		t := t + dt;
        t1 := t1 + dt;
	}	
	
	c_ecolis(100, 0, 0, 400, {"p1"}, program p());
    c_ecolis(100, 0, 0, 400, {"p2"}, program p());
    c_ecolis(100, 0, 0, 400, {"p3"}, program p());
	c_ecolis(700, 0, 0, 400, {}, program p());

	//fiji para el video
};